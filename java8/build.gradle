import org.asciidoctor.gradle.AsciidoctorTask

apply plugin: 'java'

version = '1.0'

buildDir = "target"

compileJava {
    sourceCompatibility = '1.8'
}


buildscript {
    repositories {
        mavenCentral()
        mavenLocal()

        maven {
			url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
		classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.4"

	}
}

sourceSets {

}


//apply plugin: 'org.asciidoctor.gradle.asciidoctor'

apply plugin: 'org.asciidoctor.convert'
apply plugin: "me.champeau.gradle.jmh"



repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name 'jboss-nexus'
        url "http://repository.jboss.org/nexus/content/groups/public/"
    }
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
//    jmh 'org.openjdk.jmh:jmh-core:1.19'
//    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.19'
//    jmh 'org.openjdk.jmh:jmh-generator-bytecode:1.19'

}


asciidoctorj {
    version = '1.5.6'
}

asciidoctor {

    sourceDir = new File("src/docs")
    outputDir = new File("$buildDir/docs")

//    options doctype: 'book'

    backends 'pdf'
    attributes 'source-highlighter': 'coderay',
            toc                 : '',
            idprefix            : '',
            idseparator         : '-'
}

asciidoctor.doLast(

        {
            println "$buildDir/docs"
            copy {
                from new File( "src/docs/imgs" )
                into new File( new File( "$buildDir/docs" ), "/imgs" )
            }
        }
)

jmh {
//    iterations = 5 //default 10
    fork = 5 //default 10
    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt") // human-readable output file
    resultsFile = project.file("${project.buildDir}/reports/jmh/results.txt") // results file

}